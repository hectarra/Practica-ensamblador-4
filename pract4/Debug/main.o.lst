   1              		.cpu arm7tdmi
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  21              	.Ltext0:
  22              		.file 1 "../main.c"
 1987              		.align	2
 1988              		.global	initRGB
 1990              	initRGB:
 1991              	.LFB0:
   1:../main.c     **** #include <stdio.h>
   2:../main.c     **** #include "trafo.h"
   3:../main.c     **** #include "types.h"
   4:../main.c     **** 
   5:../main.c     **** //#define N 8
   6:../main.c     **** //#define M 4
   7:../main.c     **** 
   8:../main.c     **** 
   9:../main.c     **** #define FACTOR ( (unsigned char) ( 255/(N+M-2) ) )
  10:../main.c     **** 
  11:../main.c     **** 
  12:../main.c     **** extern int contarUnos (int mat[N][M], int vector[N], int, int);
  13:../main.c     **** 
  14:../main.c     **** 
  15:../main.c     **** pixelRGB imagenRGB[N][M];
  16:../main.c     **** int imagenGris[N][M];
  17:../main.c     **** int imagenBinaria[N][M];
  18:../main.c     **** int unosPorFila[N];
  19:../main.c     **** int sumaUnos;
  20:../main.c     **** 
  21:../main.c     **** void initRGB(pixelRGB m[N][M], int nfilas, int ncols) {
 1992              		.loc 1 21 0
 1993              		.cfi_startproc
 1994              		@ Function supports interworking.
 1995              		@ args = 0, pretend = 0, frame = 0
 1996              		@ frame_needed = 0, uses_anonymous_args = 0
 1997              		@ link register save eliminated.
 1998              	.LVL0:
 1999 0000 70002DE9 		stmfd	sp!, {r4, r5, r6}
 2000              	.LCFI0:
 2001              		.cfi_def_cfa_offset 12
 2002              	.LVL1:
  22:../main.c     **** 
  23:../main.c     ****     int i,j;
  24:../main.c     ****     
  25:../main.c     ****     for (i=0;i<nfilas;i++)
 2003              		.loc 1 25 0
 2004 0004 000051E3 		cmp	r1, #0
 2005 0008 160000DA 		ble	.L1
 2006              		.cfi_offset 6, -4
 2007              		.cfi_offset 5, -8
 2008              		.cfi_offset 4, -12
  21:../main.c     **** void initRGB(pixelRGB m[N][M], int nfilas, int ncols) {
 2009              		.loc 1 21 0
 2010 000c 011181E0 		add	r1, r1, r1, asl #2
 2011              	.LVL2:
 2012 0010 015181E0 		add	r5, r1, r1, asl #2
 2013 0014 0040A0E3 		mov	r4, #0
  26:../main.c     ****         for (j=0; j<ncols; j++) {
 2014              		.loc 1 26 0
 2015 0018 0460A0E1 		mov	r6, r4
 2016 001c 0B0000EA 		b	.L3
 2017              	.LVL3:
 2018              	.L4:
  27:../main.c     ****             m[i][j].R = (i+j)*FACTOR;
 2019              		.loc 1 27 0 discriminator 2
 2020 0020 003081E5 		str	r3, [r1, #0]
  28:../main.c     ****             m[i][j].G = (i+j)*FACTOR;
 2021              		.loc 1 28 0 discriminator 2
 2022 0024 043081E5 		str	r3, [r1, #4]
  29:../main.c     ****             m[i][j].B = (i+j)*FACTOR;
 2023              		.loc 1 29 0 discriminator 2
 2024 0028 083081E5 		str	r3, [r1, #8]
  26:../main.c     ****         for (j=0; j<ncols; j++) {
 2025              		.loc 1 26 0 discriminator 2
 2026 002c 01C08CE2 		add	ip, ip, #1
 2027              	.LVL4:
 2028 0030 193083E2 		add	r3, r3, #25
 2029 0034 0C1081E2 		add	r1, r1, #12
 2030 0038 02005CE1 		cmp	ip, r2
 2031 003c F7FFFF1A 		bne	.L4
 2032              	.LVL5:
 2033              	.L5:
  26:../main.c     ****         for (j=0; j<ncols; j++) {
 2034              		.loc 1 26 0 is_stmt 0
 2035 0040 194084E2 		add	r4, r4, #25
 2036 0044 300080E2 		add	r0, r0, #48
  25:../main.c     ****     for (i=0;i<nfilas;i++)
 2037              		.loc 1 25 0 is_stmt 1
 2038 0048 050054E1 		cmp	r4, r5
 2039 004c 0500000A 		beq	.L1
 2040              	.L3:
 2041              	.LVL6:
  26:../main.c     ****         for (j=0; j<ncols; j++) {
 2042              		.loc 1 26 0 discriminator 1
 2043 0050 000052E3 		cmp	r2, #0
 2044 0054 0010A0C1 		movgt	r1, r0
 2045 0058 0430A0C1 		movgt	r3, r4
 2046 005c 06C0A0C1 		movgt	ip, r6
 2047 0060 EEFFFFCA 		bgt	.L4
 2048 0064 F5FFFFEA 		b	.L5
 2049              	.LVL7:
 2050              	.L1:
  30:../main.c     ****             //(i+j)*FACTOR
  31:../main.c     ****         }
  32:../main.c     **** }
 2051              		.loc 1 32 0
 2052 0068 7000BDE8 		ldmfd	sp!, {r4, r5, r6}
 2053 006c 1EFF2FE1 		bx	lr
 2054              		.cfi_endproc
 2055              	.LFE0:
 2057              		.align	2
 2058              		.global	main
 2060              	main:
 2061              	.LFB1:
  33:../main.c     **** 
  34:../main.c     **** 
  35:../main.c     **** 
  36:../main.c     **** int main() {
 2062              		.loc 1 36 0
 2063              		.cfi_startproc
 2064              		@ Function supports interworking.
 2065              		@ args = 0, pretend = 0, frame = 0
 2066              		@ frame_needed = 1, uses_anonymous_args = 0
 2067 0070 0DC0A0E1 		mov	ip, sp
 2068              	.LCFI1:
 2069              		.cfi_def_cfa_register 12
 2070 0074 30D82DE9 		stmfd	sp!, {r4, r5, fp, ip, lr, pc}
 2071 0078 04B04CE2 		sub	fp, ip, #4
 2072              		.cfi_offset 14, -8
 2073              		.cfi_offset 13, -12
 2074              		.cfi_offset 11, -16
 2075              		.cfi_offset 5, -20
 2076              		.cfi_offset 4, -24
 2077              	.LCFI2:
 2078              		.cfi_def_cfa 11, 4
  37:../main.c     ****     
  38:../main.c     ****     // 1. Crear una matriz NxM de diferentes colores
  39:../main.c     **** 
  40:../main.c     **** 	initRGB(imagenRGB,N,M);
 2079              		.loc 1 40 0
 2080 007c 68409FE5 		ldr	r4, .L9
 2081 0080 0400A0E1 		mov	r0, r4
 2082 0084 0810A0E3 		mov	r1, #8
 2083 0088 0420A0E3 		mov	r2, #4
 2084 008c FEFFFFEB 		bl	initRGB
  41:../main.c     **** 
  42:../main.c     **** 	// 2. Traducir la matriz RGB a una matriz de grises
  43:../main.c     **** 
  44:../main.c     ****     RGB2GrayMatrix(imagenRGB,imagenGris,N,M);
 2085              		.loc 1 44 0
 2086 0090 58509FE5 		ldr	r5, .L9+4
 2087 0094 0400A0E1 		mov	r0, r4
 2088 0098 0510A0E1 		mov	r1, r5
 2089 009c 0820A0E3 		mov	r2, #8
 2090 00a0 0430A0E3 		mov	r3, #4
 2091 00a4 FEFFFFEB 		bl	RGB2GrayMatrix
  45:../main.c     **** 
  46:../main.c     ****     // 3. Traducir la matriz de grises a una matriz en blanco y negro
  47:../main.c     **** 
  48:../main.c     ****     Gray2BinaryMatrix(imagenGris,imagenBinaria,N,M);
 2092              		.loc 1 48 0
 2093 00a8 44409FE5 		ldr	r4, .L9+8
 2094 00ac 0500A0E1 		mov	r0, r5
 2095 00b0 0410A0E1 		mov	r1, r4
 2096 00b4 0820A0E3 		mov	r2, #8
 2097 00b8 0430A0E3 		mov	r3, #4
 2098 00bc FEFFFFEB 		bl	Gray2BinaryMatrix
  49:../main.c     **** 
  50:../main.c     ****     // Contar los unos que aparecen por filas en la matriz de blanco y negro
  51:../main.c     **** 
  52:../main.c     ****     sumaUnos = contarUnos(imagenBinaria,unosPorFila,N,M);
 2099              		.loc 1 52 0
 2100 00c0 0400A0E1 		mov	r0, r4
 2101 00c4 2C109FE5 		ldr	r1, .L9+12
 2102 00c8 0820A0E3 		mov	r2, #8
 2103 00cc 0430A0E3 		mov	r3, #4
 2104 00d0 FEFFFFEB 		bl	contarUnos
 2105 00d4 20309FE5 		ldr	r3, .L9+16
 2106 00d8 000083E5 		str	r0, [r3, #0]
  53:../main.c     **** 
  54:../main.c     **** 
  55:../main.c     **** 
  56:../main.c     ****     return 0;
  57:../main.c     **** }
 2107              		.loc 1 57 0
 2108 00dc 0000A0E3 		mov	r0, #0
 2109 00e0 14D04BE2 		sub	sp, fp, #20
 2110 00e4 30689DE8 		ldmfd	sp, {r4, r5, fp, sp, lr}
 2111 00e8 1EFF2FE1 		bx	lr
 2112              	.L10:
 2113              		.align	2
 2114              	.L9:
 2115 00ec 00000000 		.word	imagenRGB
 2116 00f0 00000000 		.word	imagenGris
 2117 00f4 00000000 		.word	imagenBinaria
 2118 00f8 00000000 		.word	unosPorFila
 2119 00fc 00000000 		.word	sumaUnos
 2120              		.cfi_endproc
 2121              	.LFE1:
 2123              		.comm	imagenRGB,384,4
 2124              		.comm	imagenGris,128,4
 2125              		.comm	imagenBinaria,128,4
 2126              		.comm	unosPorFila,32,4
 2127              		.comm	sumaUnos,4,4
 2128              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\USUARI~1\AppData\Local\Temp\cc9Y27c2.s:1987   .text:00000000 $a
C:\Users\USUARI~1\AppData\Local\Temp\cc9Y27c2.s:1990   .text:00000000 initRGB
C:\Users\USUARI~1\AppData\Local\Temp\cc9Y27c2.s:2060   .text:00000070 main
C:\Users\USUARI~1\AppData\Local\Temp\cc9Y27c2.s:2115   .text:000000ec $d
                            *COM*:00000180 imagenRGB
                            *COM*:00000080 imagenGris
                            *COM*:00000080 imagenBinaria
                            *COM*:00000020 unosPorFila
                            *COM*:00000004 sumaUnos
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
RGB2GrayMatrix
Gray2BinaryMatrix
contarUnos
